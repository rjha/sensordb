

Device
---------
	name
	manufacturer
	version
	description
	device_id

	variables
		name-value pairs
	meta_data
		name-value pairs
	
sensor
-----------
	serial_number
	device_template
	meta_data
		name-value pairs
	+ location: special variable
	+ path : special variable

readings
----------
	sensor.serial_number
	sensor.device.variables
	sensor.device.meta_data
	sensor.meta_data
	+ sensor.special_variables
	+ timestamp
	
	
Provisioning
------------

+ Add a Project
+ Add a Device
+ Add a Sensor

project specific
-----------------
after provisioning 
 - query the project 
 - get variable keys
 - parse my data on gateway
 - push to central server using variables dictionary



 platform
 ---------
 what you want to query on - should be decided before-hand?
 project + sensor + variables dictionary - write some-where
 

Activating sensors
------------------
	
Example #1
 Fleet tracker
 I parse the data 
 

 API design
 projectId is part of authentication
 write(sensorId,key-value pairs with timestamp)
 	write would check if this sensorId has a corresponding key or not

 
 getVariableKeys(sensorId)
 getVariableKeys(deviceId)
 
REST API Design
------------------ 
Input

API - should accept multiple items in every call
That is important - because you can save round trip times that way!

Return values from API
 - How to distinguish error cases from success?
	+ return a code?
		sometimes we can return HTTP status code 200 and an error?
	+ return error string?


Error design
	- Internal errors should not be exposed to the client
	- client should get errors in terms of well defined HTTP codes
		+ 200 OK
		+ 500 internal error
		+ 400 Bad Request (Argument exception)

	multiple fine grained internal errors - should be mapped to - Coarse API exceptions
	with right http response codes.
	Error tracing inside service implementation only
	Bubble up errors and preserve stack and log it
	multiple traces is a bad idea	
 
	
	
Service interface

	+ service interface should not know about the internal errors 
	+ service interface calls an implementation and deals with REST exceptions only

Output
	How to signal error?
	


   	

 
 
 
 
	


